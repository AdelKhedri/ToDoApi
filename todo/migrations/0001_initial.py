# Generated by Django 5.0 on 2023-12-27 17:06

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField(max_length=300)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'comment',
                'verbose_name_plural': 'comments',
            },
        ),
        migrations.CreateModel(
            name='ToDoItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField()),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('color', models.CharField(blank=True, choices=[('red', 'Red'), ('blue', 'Blue'), ('green', 'Green'), ('yellow', 'yellow'), ('purple', 'purple'), ('orange', 'orange'), ('brown', 'brown'), ('pink', 'pink'), ('aqua', 'aqua'), ('white', 'white')], max_length=20)),
                ('priority', models.IntegerField(default=0)),
                ('hashtags', models.CharField(blank=True, max_length=300)),
                ('description', models.CharField(max_length=300)),
                ('start', models.DateTimeField(blank=True)),
                ('end', models.DateTimeField(blank=True)),
                ('completed', models.BooleanField(default=False)),
                ('icon', models.ImageField(blank=True, null=True, upload_to='list/images/')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='author_item', to=settings.AUTH_USER_MODEL)),
                ('comments', models.ManyToManyField(blank=True, to='todo.comment')),
                ('worker', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='worker', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'item',
                'verbose_name_plural': 'items',
            },
        ),
        migrations.CreateModel(
            name='ToDoList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField()),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('color', models.CharField(blank=True, choices=[('red', 'Red'), ('blue', 'Blue'), ('green', 'Green'), ('yellow', 'yellow'), ('purple', 'purple'), ('orange', 'orange'), ('brown', 'brown'), ('pink', 'pink'), ('aqua', 'aqua'), ('white', 'white')], max_length=20)),
                ('priority', models.IntegerField(default=0)),
                ('hashtags', models.CharField(blank=True, max_length=300)),
                ('description', models.CharField(max_length=300)),
                ('title', models.CharField(max_length=150)),
                ('icon', models.ImageField(blank=True, null=True, upload_to='list/images/')),
                ('point', models.FloatField(default=0)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='author_list', to=settings.AUTH_USER_MODEL)),
                ('comments', models.ManyToManyField(blank=True, to='todo.comment')),
                ('items', models.ManyToManyField(blank=True, to='todo.todoitem')),
            ],
            options={
                'verbose_name': 'list',
                'verbose_name_plural': 'lists',
            },
        ),
    ]
